{
  // Place your advent-of-code workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log(\"$1\");",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Solution": {
    "scope": "javascript,typescript",
    "prefix": "solution",
    "body": [
      "import * as fs from \"fs\";",
      "import { runPart } from \"../../../lib\";",
      "console.clear();",
      "",
      "const data = fs",
      "  .readFileSync(\"./input.txt\", \"utf8\")",
      "  .split(\"\\r\\n\")",
      "  .map((line) => line.split(\" \").map(Number));$0",
      "",
      "const partOne = () => 1;",
      "const partTwo = () => 2;",
      "",
      "runPart(\"One\", partOne); //",
      "runPart(\"Two\", partTwo); //"
    ],
    "description": "Solution template"
  }
}
